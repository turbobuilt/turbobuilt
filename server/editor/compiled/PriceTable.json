{"js":"const { defineComponent: _defineComponent } = Vue;\nconst { createElementVNode: _createElementVNode, renderList: _renderList, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock, toDisplayString: _toDisplayString, vModelText: _vModelText, withDirectives: _withDirectives, createCommentVNode: _createCommentVNode } = Vue;\nconst _hoisted_1 = {\n  key: 0,\n  class: \"price-table\"\n};\nconst _hoisted_2 = {\n  class: \"price-input-container\",\n  tabindex: \"1\"\n};\nconst _hoisted_3 = { class: \"currency-symbol\" };\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nconst { onMounted, reactive, watch } = Vue;\nconst fullComponent = /* @__PURE__ */ _defineComponent({\n  __name: \"PriceTable\",\n  props: {\n    modelValue: { type: null, required: true }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n    const emit = __emit;\n    const props = __props;\n    watch(() => props.modelValue, async (newVal) => {\n      if (newVal) {\n        if (!newVal.tiers) {\n          emit(\"update:modelValue\", reactive({\n            tiers: [{ price: 0, quantity: null }],\n            currency: \"usd\",\n            symbol: \"$\"\n          }));\n        }\n      } else {\n        emit(\"update:modelValue\", reactive({\n          tiers: [{ price: 0, quantity: null }],\n          currency: \"usd\",\n          symbol: \"$\"\n        }));\n      }\n    }, { immediate: true });\n    const currencies = {\n      aud: \"A$\",\n      cad: \"C$\",\n      chf: \"CHF\",\n      cny: \"\\xA5\",\n      eur: \"\\u20AC\",\n      gbp: \"\\xA3\",\n      jpy: \"\\xA5\",\n      usd: \"$\",\n      inr: \"\\u20B9\",\n      rub: \"\\u20BD\",\n      brl: \"R$\",\n      zar: \"R\",\n      nzd: \"NZ$\",\n      sgd: \"S$\",\n      hkd: \"HK$\"\n    };\n    function updateCurrency(event) {\n      props.modelValue.currency = event.target.value;\n      props.modelValue.symbol = currencies[event.target.value];\n    }\n    return (_ctx, _cache) => {\n      return props.modelValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _cache[1] || (_cache[1] = _createElementVNode(\n          \"h4\",\n          null,\n          \"Price\",\n          -1\n          /* HOISTED */\n        )),\n        (_openBlock(true), _createElementBlock(\n          _Fragment,\n          null,\n          _renderList(props.modelValue.tiers, (priceTier, index) => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: \"price-row\"\n            }, [\n              _createElementVNode(\"div\", _hoisted_2, [\n                _createElementVNode(\n                  \"div\",\n                  _hoisted_3,\n                  _toDisplayString(props.modelValue.symbol),\n                  1\n                  /* TEXT */\n                ),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event) => priceTier.price = $event\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, priceTier.price]\n                ])\n              ]),\n              index === 0 ? (_openBlock(), _createElementBlock(\"select\", {\n                key: 0,\n                value: props.modelValue.currency,\n                onChange: _cache[0] || (_cache[0] = ($event) => updateCurrency($event))\n              }, [\n                (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  null,\n                  _renderList(currencies, (symbol, code) => {\n                    return _createElementVNode(\"option\", {\n                      key: code,\n                      value: code\n                    }, _toDisplayString(code.toUpperCase()), 9, _hoisted_6);\n                  }),\n                  64\n                  /* STABLE_FRAGMENT */\n                ))\n              ], 40, _hoisted_5)) : _createCommentVNode(\"v-if\", true)\n            ]);\n          }),\n          128\n          /* KEYED_FRAGMENT */\n        ))\n      ])) : _createCommentVNode(\"v-if\", true);\n    };\n  }\n});\n","css":".price-table h4 {\n  margin-top: 8px;\n  margin-bottom: 3px;\n}\n.price-table .currency-symbol {\n  padding: 5px;\n  padding-right: 3px;\n}\n.price-table select {\n  padding: 4px;\n  border: 1px solid silver;\n  border-left: 0;\n}\n.price-table select:active, .price-table select:focus {\n  outline: none;\n}\n.price-table .price-input-container {\n  border: 1px solid silver;\n  display: flex;\n  align-items: center;\n}\n.price-table .price-row {\n  display: flex;\n  margin-bottom: 10px;\n}\n.price-table input {\n  padding: 5px;\n  padding-left: 0;\n  line-height: 1;\n}\n.price-table input:active, .price-table input:focus {\n  outline: none;\n}\n"}