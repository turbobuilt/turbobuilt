{"js":"const { defineComponent: _defineComponent } = Vue;\nconst { toDisplayString: _toDisplayString, openBlock: _openBlock, createElementBlock: _createElementBlock, createCommentVNode: _createCommentVNode, createTextVNode: _createTextVNode, unref: _unref } = Vue;\nconst _hoisted_1 = { key: 0 };\nconst _hoisted_2 = { key: 1 };\nconst { computed, onMounted, onUnmounted, ref } = Vue;\nconst fullComponent = /* @__PURE__ */ _defineComponent({\n  __name: \"FileInput\",\n  props: {\n    label: { type: String, required: true },\n    accept: { type: String, required: false },\n    loading: { type: Boolean, required: false }\n  },\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n    const props = __props;\n    const emit = __emit;\n    const root = ref(null);\n    let fileInput = null;\n    function onFileChange(e) {\n      const files = Array.from(e.target.files);\n      if (files.length > 0) {\n        emit(\"update:modelValue\", files);\n      }\n      destroyFileInput();\n      createFileInput();\n    }\n    function createFileInput() {\n      fileInput = document.createElement(\"input\");\n      fileInput.type = \"file\";\n      fileInput.style.display = \"none\";\n      fileInput.accept = props.accept;\n      fileInput.addEventListener(\"change\", onFileChange);\n      root.value.appendChild(fileInput);\n    }\n    function destroyFileInput() {\n      if (fileInput) {\n        fileInput.removeEventListener(\"change\", onFileChange);\n        fileInput.remove();\n        fileInput = null;\n      }\n    }\n    onMounted(() => {\n      createFileInput();\n    });\n    onUnmounted(() => {\n      destroyFileInput();\n    });\n    function dragOver(e) {\n      e.preventDefault();\n      root.value.classList.add(\"drag-over\");\n    }\n    function dragLeave(e) {\n      e.preventDefault();\n      root.value.classList.remove(\"drag-over\");\n    }\n    function drop(e) {\n      e.preventDefault();\n      root.value.classList.remove(\"drag-over\");\n      const files = Array.from(e.dataTransfer.files);\n      if (files.length > 0) {\n        emit(\"update:modelValue\", files);\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\n        \"div\",\n        {\n          class: \"file-input\",\n          ref_key: \"root\",\n          ref: root,\n          onClick: _cache[0] || (_cache[0] = ($event) => _unref(fileInput).click()),\n          onDragover: dragOver,\n          onDragleave: dragLeave,\n          onDrop: drop\n        },\n        [\n          !_ctx.loading ? (_openBlock(), _createElementBlock(\n            \"div\",\n            _hoisted_1,\n            _toDisplayString(_ctx.label),\n            1\n            /* TEXT */\n          )) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createCommentVNode(' <v-progress-circular indeterminate :size=\"18\" /> '),\n            _cache[1] || (_cache[1] = _createTextVNode(\" Uploading \"))\n          ]))\n        ],\n        544\n        /* NEED_HYDRATION, NEED_PATCH */\n      );\n    };\n  }\n});\n","css":".file-input {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50px;\n  min-width: 200px;\n  cursor: pointer;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 10px;\n  background-color: #f9f9f9;\n  color: #666;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.1s;\n}\n.file-input.drag-over {\n  background-color: #f0f0f0;\n}\n"}